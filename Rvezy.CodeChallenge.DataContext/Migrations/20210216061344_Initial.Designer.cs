// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rvezy.CodeChallenge.DataContext;

namespace Rvezy.CodeChallenge.DataContext.Migrations
{
    [DbContext(typeof(RvezyDataContext))]
    [Migration("20210216061344_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Rvezy.CodeChallenge.Models.CalendarModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Available")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ListingId")
                        .HasColumnType("int");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ListingId");

                    b.ToTable("Calendar");
                });

            modelBuilder.Entity("Rvezy.CodeChallenge.Models.ListingModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("Accommodates")
                        .HasColumnType("int");

                    b.Property<string>("Amenities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Availability30")
                        .HasColumnType("int");

                    b.Property<int?>("Availability365")
                        .HasColumnType("int");

                    b.Property<int?>("Availability60")
                        .HasColumnType("int");

                    b.Property<int?>("Availability90")
                        .HasColumnType("int");

                    b.Property<double?>("Bathrooms")
                        .HasColumnType("float");

                    b.Property<string>("BedType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Bedrooms")
                        .HasColumnType("int");

                    b.Property<int?>("Beds")
                        .HasColumnType("int");

                    b.Property<int?>("CalculatedHostListingsCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CalendarLastScraped")
                        .HasColumnType("datetime2");

                    b.Property<string>("CalendarUpdated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CancellationPolicy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CleaningFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExperiencesOffered")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraPeople")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstReview")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GuestsIncluded")
                        .HasColumnType("int");

                    b.Property<string>("HasAvailability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostAbout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostAcceptanceRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostHasProfilePic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HostId")
                        .HasColumnType("int");

                    b.Property<string>("HostIdentityVerified")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostIsSuperhost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HostListingsCount")
                        .HasColumnType("int");

                    b.Property<string>("HostLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostNeighbourhood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostPictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostResponseRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostResponseTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("HostSince")
                        .HasColumnType("datetime2");

                    b.Property<string>("HostThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HostTotalListingsCount")
                        .HasColumnType("int");

                    b.Property<string>("HostUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostVerifications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstantBookable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsLocationExact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JurisdictionNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastReview")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastScraped")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<string>("License")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListingUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Market")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaximumNights")
                        .HasColumnType("int");

                    b.Property<string>("MediumUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MinimumNights")
                        .HasColumnType("int");

                    b.Property<string>("MonthlyPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NeighborhoodOverview")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Neighbourhood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NeighbourhoodCleansed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NeighbourhoodGroupCleansed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfReviews")
                        .HasColumnType("int");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequireGuestPhoneVerification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequireGuestProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequiresLicense")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReviewScoresAccuracy")
                        .HasColumnType("int");

                    b.Property<int?>("ReviewScoresCheckin")
                        .HasColumnType("int");

                    b.Property<int?>("ReviewScoresCleanliness")
                        .HasColumnType("int");

                    b.Property<int?>("ReviewScoresCommunication")
                        .HasColumnType("int");

                    b.Property<int?>("ReviewScoresLocation")
                        .HasColumnType("int");

                    b.Property<int?>("ReviewScoresRating")
                        .HasColumnType("int");

                    b.Property<int?>("ReviewScoresValue")
                        .HasColumnType("int");

                    b.Property<string>("ReviewsPerMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ScrapeId")
                        .HasColumnType("bigint");

                    b.Property<string>("SecurityDeposit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmartLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Space")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SquareFeet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeeklyPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XlPictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zipcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Listing");
                });

            modelBuilder.Entity("Rvezy.CodeChallenge.Models.ReviewModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ListingId")
                        .HasColumnType("int");

                    b.Property<int>("ReviewerId")
                        .HasColumnType("int");

                    b.Property<string>("ReviewerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ListingId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("Rvezy.CodeChallenge.Models.CalendarModel", b =>
                {
                    b.HasOne("Rvezy.CodeChallenge.Models.ListingModel", "Listing")
                        .WithMany("Calendars")
                        .HasForeignKey("ListingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Listing");
                });

            modelBuilder.Entity("Rvezy.CodeChallenge.Models.ReviewModel", b =>
                {
                    b.HasOne("Rvezy.CodeChallenge.Models.ListingModel", "Listing")
                        .WithMany("Reviews")
                        .HasForeignKey("ListingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Listing");
                });

            modelBuilder.Entity("Rvezy.CodeChallenge.Models.ListingModel", b =>
                {
                    b.Navigation("Calendars");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
